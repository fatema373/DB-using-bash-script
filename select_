#!/bin/bash
cd $db_directory/$name


while true; do
	awk '{print NR,"==>",$0}' tables_name #file contains tables' names of DB
	read -p "choose number of table to select from " table_num
	number_of_tables=$(wc -l < "tables_name")
	if [[ $table_num -gt $number_of_tables || $table_num -le 0 ]]; then
		echo "not a valid choice, try again"
		continue
	else

		table=`sed -n "${table_num}p" tables_name`
		#echo $table
		data="data_"
		meta="metadata_"
		data="${data}${table}"
		meta_file="${meta}${table}"
		columns=()
		types=()
		. metaAndData
		select options in "Select All" "Select row by column" "Select column" "Back"; do
			case $options in 
				"Select All") 
					cat $data
					break
				;;
				"Select row by column")
					 echo "Select row by column"
					 echo "Choose column:"
					 . displayColumns
					 read -p "Enter your choice: " column_num
					 if [[ $column_num -gt ${#columns[@]} || $column_num -le 0 ]]; then
						echo "not a valid choice, try again"
					 else
						column_name="${columns[$((column_num-1))]}"
					 	read -p "$column_name: " input
					 	awk -F: -v col_num="$column_num" -v input="$input" '$col_num == input {print $0}'  "$data"
					 fi
					 break
				;;
				"Select column")
					echo "Select row by column"
					echo "Choose column:"
					. displayColumns
					read -p "Enter your choice: " column_num
					if [[ $column_num -gt ${#columns[@]} || $column_num -le 0 ]]; then
						echo "not a valid choice, try again"
					else
						column_name="${columns[$((column_num-1))]}"
						awk -F: -v col_num="$column_num" '{print $col_num }'  "$data"
					fi
					break
				;;
				"Back")
					. database
					break
				;;

			esac
		done
	fi
done
